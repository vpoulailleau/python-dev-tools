[tool.poetry]
name = "python_dev_tools"
version = "2020.9.10"
description = "Needed and up-to-date tools to develop in Python"
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Utilities",
]
authors = ["Vincent Poulailleau <vpoulailleau@gmail.com>"]
readme = "README.rst"
repository = "https://github.com/vpoulailleau/python-dev-tools"
homepage = "https://github.com/vpoulailleau/python-dev-tools"
documentation = "https://python-dev-tools.readthedocs.io/en/latest/"
keywords = ["python_dev_tools", "development", "tools"]
license = "BSD-3-Clause"
include = ["python_dev_tools/**/*.py", "whatalinter_vscode.py"]

[tool.poetry.dependencies]
python = ">=3.6.1,<4.0"
autoflake = "^1.3.0"
bandit = "^1.6.0"
black = "^20.8b1"
coverage = "^5.0.0"
darglint = "^1.2"
doc8 = ">=0.8,<0.10"
flake8 = "^3.8.0"
flake8-2020 = "^1.6.0"
flake8-bandit = "^2.1.0"
flake8-broken-line = "^0.2.0"
flake8-bugbear = "^19.0"
flake8-builtins = "^1.4.0"
flake8-commas = "^2.0"
flake8-comprehensions = "^3.2.0"
flake8-debugger = "^3.2.0"
flake8-docstrings = "^1.5.0"
flake8-eradicate = ">=0.3,<0.5"
flake8-fixme = "^1.1.0"
flake8-isort = ">=3.0.1,<4"
flake8-logging-format = "^0.6.0"
flake8-mutable = "^1.2.0"
flake8-quotes = "^2.0.1"
flake8-rst-docstrings = "^0.0.12"
flake8-string-format = "^0.2"
flake8-variables-names = "^0.0.3"
isort = "^4.3.5"
mccabe = "^0.6.0"
pip = "^20.2.0"
pep8-naming = "^0.9.0"
pycodestyle = "^2.5.0"
pydocstyle = "^5.0.0"
pyflakes = "^2.1.0"
pytest = "^6.0.0"
pytest-cov = "^2.10.0"
pyupgrade = "^2.1.0"
Sphinx = "^2.4.0"
tox = "^3.19.0"
tox-travis = "^0.12"
wemake-python-styleguide = "^0.14.1"

[tool.poetry.scripts]
whatalinter = "python_dev_tools.whatalinter:main"
whataformatter = "python_dev_tools.whataformatter:main"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py36, py37, py38

[testenv]
whitelist_externals =
    poetry
    echo
    sed
    cp
changedir = {toxinidir}/tests
commands =
    poetry install -v
    poetry run pytest -s -vv --cov=python_dev_tools
    poetry run coverage xml
    echo 'fix travis bug'
    sed --in-place -e 's#//home#/home#g' coverage.xml
    echo 'fix codeclimate bug, use relative path'
    sed --in-place -e 's#/home.*vpoulailleau/python-dev-tools/##g' coverage.xml
    cp coverage.xml ../coverage.xml
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
